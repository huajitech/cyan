variables:
  NPM_MIRROR: https://registry.npmmirror.com

stages:
  - test
  - build
  - deploy

default:
  image: registry.gitlab.huajitech.net:5050/funnysyc/seamster

  cache:
    paths:
      - .cache/pip
      - $HOME/.npm
      - $HOME/.cache

  before_script:
    - python -V
    - node -v

test:
  stage: test
  only:
    changes:
      - cyan/**/*
      - example/**/*
  script:
    - poetry install
    - poetry run pyright
    - poetry run flake8

build:
  stage: build
  rules:
    - if: $CI_COMMIT_TAG || $BUILD
  script:
    - poetry install --no-dev
    - poetry build
  artifacts:
    paths:
      - dist

nightly-build:
  stage: build
  rules:
    - if: $NIGHTLY_BUILD
  script:
    - poetry install --no-dev
    - poetry run python ./build/nightly_version_modifier.py
    - poetry build
  artifacts:
    paths:
      - dist

publish:
  stage: deploy
  only:
    refs:
      - tags
  needs:
    - job: build
      artifacts: true
  script:
    - poetry publish

release:
  stage: deploy
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  only:
    refs:
      - tags
  before_script:
    - echo "Preparing for running the release job."
  script:
    - echo "Running the release job."
  release:
    tag_name: $CI_COMMIT_TAG
    name: 'Cyan v$CI_COMMIT_TAG'
    description: '这是 GitLab CI 自动部署，更新日志将会手动更新。'

pages:
  stage: deploy
  rules:
    - if: $CI_COMMIT_TAG || $BUILD_PAGES
  script:
    - poetry install --no-dev
    - poetry run pip install sphinx sphinx-rtd-theme
    - cd docs
    - poetry run sphinx-apidoc -e -o . ../cyan
    - poetry run sphinx-build -b html . ./build
    - mv ./build ../public
  artifacts:
    paths:
      - public

nightly-publish:
  stage: deploy
  rules:
    - if: $NIGHTLY_BUILD
  needs:
    - job: nightly-build
      artifacts: true
  script:
    - pip install twine
    - TWINE_PASSWORD=${CI_JOB_TOKEN} TWINE_USERNAME=gitlab-ci-token python -m twine upload --repository-url ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/pypi dist/*
